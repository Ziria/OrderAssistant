//
//  ArrFoodViewController.m
//  OrderAssistant
//
//  Created by flybird on 12-10-29.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "ArrFoodViewController.h"
#import "MenuView.h"
#import "PopoverView.h"

@interface ArrFoodViewController ()

@end

@implementation ArrFoodViewController

@synthesize distantBtn;
@synthesize foodBtn;
@synthesize recommandBtn;

@synthesize distantLable;
@synthesize foodLable;
@synthesize recommandLable;
@synthesize myPickerData1;
@synthesize myPickerData2;
@synthesize actionSheet;
@synthesize result;
@synthesize btnChoice;

@synthesize bottomButton;
@synthesize arrowButton;
@synthesize expanding;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    UIImage *buttonImage = [[UIImage imageNamed:@"frame_combobox_bg.png"] stretchableImageWithLeftCapWidth:5 topCapHeight:0];
    UIImage *buttonImageHighlight=[[UIImage imageNamed:@"frame_combobox_hl_bg.png"]stretchableImageWithLeftCapWidth:5 topCapHeight:0];
    
    [distantBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [distantBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame1 = [distantBtn frame];
    buttonFrame1.size.width = buttonImage.size.width + 60;
    buttonFrame1.size.height = buttonImage.size.height+8;
    distantBtn.tag=1;
    [distantBtn setFrame:buttonFrame1];
    [distantBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
    [foodBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [foodBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame2 = [foodBtn frame];
    buttonFrame2.size.width = buttonImage.size.width + 60;
    buttonFrame2.size.height = buttonImage.size.height+8;
    foodBtn.tag=2;
    [foodBtn setFrame:buttonFrame2];
    [foodBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
    [recommandBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [recommandBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame3 = [recommandBtn frame];
    buttonFrame3.size.width = buttonImage.size.width + 60;
    buttonFrame3.size.height = buttonImage.size.height+8;
    recommandBtn.tag=3;
    [recommandBtn setFrame:buttonFrame3];
    [recommandBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

- (IBAction)buttonPress:(UIButton *)sender
{
    btnChoice =sender.tag;
    if (btnChoice==1) {
        NSArray *array1 = [[NSArray alloc] initWithObjects:@"500米",@"1000米", @"2000米", @"3000米", @"4000米", @"5000米", nil]; 
        self.myPickerData1=array1;
    }else if (btnChoice==2) {
        NSArray *array2_1=[[NSArray alloc] initWithObjects:@"1",@"2",@"3",@"4",@"5", nil];
        NSArray *array2_2=[[NSArray alloc] initWithObjects:@"1",@"2",@"3",@"4",@"5", nil];
        
        self.myPickerData1=array2_1;
        self.myPickerData2=array2_2;
    }else {
        NSArray *array3 = [[NSArray alloc] initWithObjects:@"---选择排序方式---",@"推荐↓",@"热订↓",@"距您距离↑",@"价格↓",@"价格↑", nil];
        self.myPickerData1=array3;
    }
}

- (void) showAction {
    CGRect toolbarTargetFrame=CGRectMake(0, self.view.bounds.size.height-260, self.view.bounds.size.width, 44);
    CGRect datePickerTargetFrame = CGRectMake(0, self.view.bounds.size.height - 216, self.view.bounds.size.width, 216);
    
    UIView *darkView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
    darkView.alpha = 0;//设置透明的view
    darkView.backgroundColor = [UIColor blackColor];
    darkView.tag = 9;
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismissPicker)];
    [darkView addGestureRecognizer:tapGesture];
    [self.view addSubview:darkView];
    
    
    UIPickerView *pickerDistant = [[UIPickerView alloc] initWithFrame:CGRectMake(0, 40, 320, 206)];
    pickerDistant.showsSelectionIndicator=YES;
    pickerDistant.dataSource = self;
    pickerDistant.delegate = self;
    pickerDistant.tag=10;
    [pickerDistant selectRow:1 inComponent:0 animated:YES];//设置默认选择第二个数据
    [self.view addSubview:pickerDistant];
    
    
    UIToolbar *toolBar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, self.view.bounds.size.height, 320, 44)];
    toolBar.tag = 11;
    toolBar.barStyle = UIBarStyleBlackTranslucent;
    
    UIBarButtonItem *spacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(dismissPicker)];
    
    [toolBar setItems:[NSArray arrayWithObjects:spacer, doneButton, nil]];
    [self.view addSubview:toolBar];
    
    
    [UIView beginAnimations:@"MoveIn" context:nil];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];
    [UIView setAnimationDuration:0.2];//使PickerView控件从底部升起动画的时间为0.2秒
    //使PickerView控件从底部升起动画
    [pickerDistant setFrame:CGRectMake(0.0, self.view.frame.size.height, pickerDistant.frame.size.width, pickerDistant.frame.size.height)];
    
    toolBar.frame = toolbarTargetFrame;
    pickerDistant.frame = datePickerTargetFrame;
    darkView.alpha = 0.5;
    [UIView commitAnimations];
}

- (void)dismissPicker {
    //控制pickerview下降
    CGRect toolbarTargetFrame = CGRectMake(0, self.view.bounds.size.height, 320, 44);
    CGRect datePickerTargetFrame = CGRectMake(0, self.view.bounds.size.height+44, 320, 216);
    [UIView beginAnimations:@"MoveOut" context:nil];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseOut];
    [UIView setAnimationDuration:0.2];
    [self.view viewWithTag:9].alpha = 0;
    [self.view viewWithTag:10].frame = datePickerTargetFrame;
    [self.view viewWithTag:11].frame = toolbarTargetFrame;
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(removeViews:)];
    [UIView commitAnimations];
    
    if (btnChoice==1) {
        distantLable.text = result;
    }else if (btnChoice==2) {
        foodLable.text=result;
    }else {
        recommandLable.text=result;
    }
    
    
}


- (void)removeViews:(id)object {
    [[self.view viewWithTag:9] removeFromSuperview];
    [[self.view viewWithTag:10] removeFromSuperview];
    [[self.view viewWithTag:11] removeFromSuperview];
}


#pragma mark - 
#pragma mark Picker Data Source Methods 
// 返回显示的列数
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView { 
    
    if (btnChoice==2) {
        return 2;
    }else {
        return 1;
    }
    
} 
// 返回当前列显示的行数
- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component { 
    if (component == 0) {
        return [myPickerData1 count]; 
    }
    return [myPickerData2 count];
} 
// 设置当前行的内容，若果行没有显示则自动释放
- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row             forComponent:(NSInteger)component { 
    if (component == 0) {
        return [myPickerData1 objectAtIndex:row]; 
    }
    return [myPickerData2 objectAtIndex:row];
}


- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    result = [myPickerData1 objectAtIndex:row];
    
}


- (IBAction)menuButton:(id)sender
{
    float angle = self.isExpanding ? -M_PI : 0.0f;
    [UIView animateWithDuration:0.1f animations:^{
        arrowButton.transform = CGAffineTransformMakeRotation(angle);
    }];
    
    CGPoint point = CGPointMake(160.0, 360.0);
    MenuView *menuView = [[MenuView alloc] initWithFrame:CGRectMake(0, 0, 280, 120)];
    [PopoverView showPopoverAtPoint:point inView:self.view withContentView:menuView delegate:self];
    
}

- (BOOL)isExpanding
{
    if (expanding) {
        expanding = NO;
    } else {
        expanding = YES;
    }
    return expanding;
}

- (void)popoverViewDidDismiss:(PopoverView *)popoverView {
    float angle = self.isExpanding ? -M_PI : 0.0f;
    [UIView animateWithDuration:0.1f animations:^{
        arrowButton.transform = CGAffineTransformMakeRotation(angle);
    }];
}

- (void)popoverView:(PopoverView *)popoverView didSelectItemAtIndex:(NSInteger)index {
    NSLog(@"345");
}
@end
