//
//  ArrResViewController.m
//  OrderAssistant
//
//  Created by flybird on 12-10-29.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "ArrResViewController.h"
#import "PopoverView.h"
#import "MenuView.h"
#import "WebServices.h"
#import "CommonUtil.h"

//#import "SDWebImage/UIImageView+WebCache.h"

#import "ResDetailViewController.h"
#import "ResCommentsViewController.h"
#import "PreferentialInformationViewController.h"
#import "EncourageCheckViewController.h"
#import "ShareViewController.h"
#import "PersonalViewController.h"


@interface ArrResViewController (){
    NSString *lad;
    NSString *lgd;
}

@end

@implementation ArrResViewController

@synthesize distantBtn;
@synthesize hotelBtn;
@synthesize recommandBtn;

@synthesize rescell;
@synthesize resEntity;
@synthesize resentities;
@synthesize tableviewCustom;

@synthesize distantLable;
@synthesize hotelLable;
@synthesize recommandLable;
@synthesize myPickerData1;
@synthesize myPickerData2;
@synthesize actionSheet;
@synthesize result;
@synthesize btnChoice;
@synthesize tabBar;
@synthesize curLocation;
@synthesize locationManager;
@synthesize item;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    //self.navigationController.navigationBar.topItem.title = @"附近餐厅";
	// Do any additional setup after loading the view.
    UIImage *buttonImage = [[UIImage imageNamed:@"frame_combobox_bg.png"] stretchableImageWithLeftCapWidth:5 topCapHeight:0];
    UIImage *buttonImageHighlight=[[UIImage imageNamed:@"frame_combobox_hl_bg.png"]stretchableImageWithLeftCapWidth:5 topCapHeight:0];
    
    [distantBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [distantBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame1 = [distantBtn frame];
    buttonFrame1.size.width = buttonImage.size.width + 60;
    buttonFrame1.size.height = buttonImage.size.height+8;
    distantBtn.tag=1;
    [distantBtn setFrame:buttonFrame1];
    [distantBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
    [hotelBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [hotelBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame2 = [hotelBtn frame];
    buttonFrame2.size.width = buttonImage.size.width + 60;
    buttonFrame2.size.height = buttonImage.size.height+8;
    hotelBtn.tag=2;
    [hotelBtn setFrame:buttonFrame2];
    [hotelBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
    [recommandBtn setBackgroundImage:buttonImage forState:UIControlStateNormal];
    [recommandBtn setBackgroundImage:buttonImageHighlight forState:UIControlStateHighlighted];
    CGRect buttonFrame3 = [recommandBtn frame];
    buttonFrame3.size.width = buttonImage.size.width + 60;
    buttonFrame3.size.height = buttonImage.size.height+8;
    recommandBtn.tag=3;
    [recommandBtn setFrame:buttonFrame3];
    [recommandBtn addTarget:self action:@selector(showAction) forControlEvents:UIControlEventTouchUpInside];
    
    [self getCurPosition];
    [self locationManager];
    
    self.tabBarController.delegate = self;
   }

- (void)viewDidUnload
{
    [super viewDidUnload]; // Release any retained subviews of the main view.
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

- (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController {
    if (self.tabBarController.selectedIndex == 0) {
        self.tabBarController.title = @"附近餐厅";
    }
    if (self.tabBarController.selectedIndex == 1) {
        self.tabBarController.title = @"注册";
    }
    
}
//获得自己的当前的位置信息
- (void) getCurPosition
{
	//开始探测自己的位置
	if (locationManager == nil)
	{
		locationManager =[[CLLocationManager alloc] init];
	}
	
	if ([CLLocationManager locationServicesEnabled])
	{
		locationManager.delegate = self;
		locationManager.desiredAccuracy = kCLLocationAccuracyBest;
		locationManager.distanceFilter = kCLLocationAccuracyHundredMeters;
		[locationManager startUpdatingLocation];
	}
}

- (void)viewDidAppear:(BOOL)animated {
	// Get all regions being monitored for this application.
	
}

//响应当前位置的更新，在这里记录最新的当前位置
- (void) locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation
			fromLocation:(CLLocation *)oldLocation
{
    NSTimeInterval interval = [newLocation.timestamp timeIntervalSinceDate:oldLocation.timestamp];
    NSLog(@"%lf", interval);
    //保存新位置
    curLocation = newLocation.coordinate;
    if (oldLocation == nil) {
        lad=[NSString stringWithFormat:@"%f", newLocation.coordinate.latitude];
        lgd=[NSString stringWithFormat:@"%f", newLocation.coordinate.longitude];
        NSLog(@"latitude === %@", lad);
        NSLog(@"longitude === %@", lgd);
    }
}

- (IBAction)buttonPress:(UIButton *)sender
{
    btnChoice =sender.tag;
    if (btnChoice==1) {
        NSArray *array1 = [[NSArray alloc] initWithObjects:@"500米",@"1000米", @"2000米", @"4000米", @"6000米", @"8000米", nil]; 
        self.myPickerData1=array1;
    }else if (btnChoice==2) {
        NSArray *array2_1=[[NSArray alloc] initWithObjects:@"1",@"2",@"3",@"4",@"5", nil];
        NSArray *array2_2=[[NSArray alloc] initWithObjects:@"1",@"2",@"3",@"4",@"5", nil];
        
        self.myPickerData1=array2_1;
        self.myPickerData2=array2_2;
    }else {
        NSArray *array3 = [[NSArray alloc] initWithObjects:@"---选择排序方式---",@"推荐↓",@"热订↓",@"距您距离↑",@"价格↓",@"价格↑", nil];
        self.myPickerData1=array3;
    }
}


- (void) showAction {
    CGRect toolbarTargetFrame=CGRectMake(0, self.view.bounds.size.height-260, self.view.bounds.size.width, 44);
    CGRect datePickerTargetFrame = CGRectMake(0, self.view.bounds.size.height - 216, self.view.bounds.size.width, 216);
    
    UIView *darkView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
    darkView.alpha = 0;//设置透明的view
    darkView.backgroundColor = [UIColor blackColor];
    darkView.tag = 9;
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismissPicker)];
    [darkView addGestureRecognizer:tapGesture];
    [self.view addSubview:darkView];
    
    
    UIPickerView *pickerDistant = [[UIPickerView alloc] initWithFrame:CGRectMake(0, 40, 320, 206)];
    pickerDistant.showsSelectionIndicator=YES;
    pickerDistant.dataSource = self;
    pickerDistant.delegate = self;
    pickerDistant.tag=10;
    [pickerDistant selectRow:1 inComponent:0 animated:YES];//设置默认选择第二个数据
    [self.view addSubview:pickerDistant];

    
    UIToolbar *toolBar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, self.view.bounds.size.height, 320, 44)];
    toolBar.tag = 11;
    toolBar.barStyle = UIBarStyleBlackTranslucent;
    
    UIBarButtonItem *spacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(dismissPicker)];

    [toolBar setItems:[NSArray arrayWithObjects:spacer, doneButton, nil]];
    [self.view addSubview:toolBar];
    
    
    [UIView beginAnimations:@"MoveIn" context:nil];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];
    [UIView setAnimationDuration:0.2];//使PickerView控件从底部升起动画的时间为0.2秒
    //使PickerView控件从底部升起动画
    [pickerDistant setFrame:CGRectMake(0.0, self.view.frame.size.height, pickerDistant.frame.size.width, pickerDistant.frame.size.height)];
    
    toolBar.frame = toolbarTargetFrame;
    pickerDistant.frame = datePickerTargetFrame;
    darkView.alpha = 0.5;
    [UIView commitAnimations];
}



- (void)dismissPicker {
    //控制pickerview下降
    CGRect toolbarTargetFrame = CGRectMake(0, self.view.bounds.size.height, 320, 44);
    CGRect datePickerTargetFrame = CGRectMake(0, self.view.bounds.size.height+44, 320, 216);
    [UIView beginAnimations:@"MoveOut" context:nil];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseOut];
    [UIView setAnimationDuration:0.2];
    [self.view viewWithTag:9].alpha = 0;
    [self.view viewWithTag:10].frame = datePickerTargetFrame;
    [self.view viewWithTag:11].frame = toolbarTargetFrame;
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(removeViews:)];
    [UIView commitAnimations];
    
    if (btnChoice==1) {
        distantLable.text = result;
    }else if (btnChoice==2) {
        hotelLable.text=result;
    }else {
        recommandLable.text=result;
    }
    
    
}


- (void)removeViews:(id)object {
    [[self.view viewWithTag:9] removeFromSuperview];
    [[self.view viewWithTag:10] removeFromSuperview];
    [[self.view viewWithTag:11] removeFromSuperview];
}

-(void)prepareForSegue:(UIStoryboardSegue*)segue sender:(id)sender
{
    if ([segue.identifier isEqualToString:@"ClassChoice"])
    {
        
        int row = [self.tableviewCustom indexPathForSelectedRow].row;
        resEntity=[resentities objectAtIndex:row];

        UIStoryboard *storyborad = [UIStoryboard storyboardWithName:@"MainStoryboard" bundle:nil];
        ResDetailViewController *resDetailViewController = [storyborad instantiateViewControllerWithIdentifier:@"ResDetailViewController"];
        resDetailViewController.resEntity=resEntity;
        ResCommentsViewController *resCommentsViewController=[storyborad instantiateViewControllerWithIdentifier:@"ResCommentsViewController"];
        PreferentialInformationViewController *preferentialInformationViewController=[storyborad instantiateViewControllerWithIdentifier:@"PreferentialInformationViewController"];
        EncourageCheckViewController *encourageCheckViewController=[storyborad instantiateViewControllerWithIdentifier:@"EncourageCheckViewController"];
        ShareViewController *shareViewController=[storyborad instantiateViewControllerWithIdentifier:@"ShareViewController"];
        
        UITabBarController *tabBarController = segue.destinationViewController;
        
        
        UITabBarItem *resDetailItem=[[UITabBarItem alloc] initWithTitle:@"餐厅详情" image:nil tag:1];
        resDetailViewController.tabBarItem=resDetailItem;
        UITabBarItem *resCommentsItem=[[UITabBarItem alloc] initWithTitle:@"餐厅评论" image:nil tag:2];
        resCommentsViewController.tabBarItem=resCommentsItem;
        UITabBarItem *preferentialItem=[[UITabBarItem alloc] initWithTitle:@"优惠信息" image:nil tag:3];
        preferentialInformationViewController.tabBarItem=preferentialItem;
        UITabBarItem *encourageCheckItem=[[UITabBarItem alloc] initWithTitle:@"有奖报错" image:nil tag:4];
        encourageCheckViewController.tabBarItem=encourageCheckItem;
        UITabBarItem *shareItem=[[UITabBarItem alloc] initWithTitle:@"分享" image:nil tag:5];
        shareViewController.tabBarItem=shareItem;

        
        //控制ResDetailViewController页面的title显示为对应饭店的名字
        tabBarController.title=resEntity.resNameTxt;
    
        tabBarController.viewControllers = [NSArray arrayWithObjects:resDetailViewController,resCommentsViewController, preferentialInformationViewController,encourageCheckViewController,shareViewController,nil];
    } 
}

- (void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item {
    
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
     return [self.resentities count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"ResCell";
    ResCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    resEntity=[self.resentities objectAtIndex:indexPath.row];    
    cell.resPriceTitleLbl.text=@"人均：¥";
    cell.resNameLbl.text=resEntity.resNameTxt;
    cell.resDistanceLbl.text=resEntity.resDistanceTxt;
    
    cell.resPriceLbl.text=resEntity.resPriceTxt;
    cell.resTypeLbl.text=@"自助餐";
    
    cell.resImgView.image=[CommonUtil getImageFromURL:resEntity.resImg];
    //[cell.resImgView setImageWithURL:[NSURL URLWithString:resEntity.resImg]];
    
//    cell.resImgView=[[UIImageView alloc] init];
   // [cell.resImgView setImageWithURL:[CommonUtil getImageFromURL:resEntity.resImg]];
    
    //cell.resStarImgView.image=resEntity.resStarImg;
    return cell;

}

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    NSLog(@"do didSelectRowAtIndexPath");
}


#pragma mark - 
#pragma mark Picker Data Source Methods 
// 返回显示的列数
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView { 
       
    if (btnChoice==2) {
        return 2;
    }else {
        return 1;
    }
    
} 
// 返回当前列显示的行数
- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component { 
        if (component == 0) {
            return [myPickerData1 count]; 
        }
        return [myPickerData2 count];
} 
// 设置当前行的内容，若果行没有显示则自动释放
- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row             forComponent:(NSInteger)component { 
        if (component == 0) {
            return [myPickerData1 objectAtIndex:row]; 
        }
        return [myPickerData2 objectAtIndex:row];
}


- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    result = [myPickerData1 objectAtIndex:row];
   
}


@end
